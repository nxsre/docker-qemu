variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS: 'true'
  DOCKER_HOST: tcp://docker:2376/
  DOCKER_DRIVER: overlay2
  BUILDKIT_INLINE_CACHE: '1'
# Docker Hub
  DOCKERHUB_REPO_NAME: 'qemu'

stages:
  - publish

.init:
  image: registry.gitlab.com/ix.ai/docker-buildx-qemu:latest
  services:
    - docker:dind
  before_script:
    - set -exu
    - update-binfmts --enable # Important: Ensures execution of other binary formats is enabled in the kernel
    - export BUILDX_NAME="buildx-$(tr -cd '[:alnum:]' < /dev/urandom | fold -w6 | head -n1)"
    - docker context create "${BUILDX_NAME}"
    - docker buildx create --name "${BUILDX_NAME}" --use "${BUILDX_NAME}"
    - docker buildx inspect --bootstrap
    - mkdir -p ~/.docker
    - export DOCKERHUB_IMAGE="${DOCKERHUB_REPO_PREFIX}/${DOCKERHUB_REPO_NAME}"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
    - echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin


{% for version in versions %}
publish:{{ versions[version].version }}:
  extends:
    - .init
  stage: publish
  except:
    refs:
      - tags
  script:
    - export QEMU_SHORT_VERSION="{{ versions[version].major }}.{{ versions[version].minor }}"
    - |
      if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then \
        export TAG="${QEMU_SHORT_VERSION}"; \
      else \
        export TAG="dev"; \
      fi
    - |
        docker buildx build \
        --platform={{ target_platform }} \
        --progress=plain \
        --pull \
        --push \
        --cache-from=${CI_REGISTRY_IMAGE}:cache-${QEMU_SHORT_VERSION} \
        --cache-to=${CI_REGISTRY_IMAGE}:cache-${QEMU_SHORT_VERSION} \
        --tag "${CI_REGISTRY_IMAGE}:${TAG}" \
        --tag "${DOCKERHUB_IMAGE}:${TAG}" \
        {{ versions[version].major }}.{{ versions[version].minor }}{% if versions[version].get('rc') %}-rc{% endif %}/
{% endfor %}
